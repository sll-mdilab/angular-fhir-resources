"use strict";angular.module("angularFhirResources",["ngRoute","base64","uuid","LocalStorageModule"]).config(function($httpProvider,localStorageServiceProvider){localStorageServiceProvider.setPrefix("angularFhirStorage"),$httpProvider.interceptors.push("fhirAuthInterceptor")}),angular.module("angularFhirResources").service("Utilities",function(){return{formatFhirResponse:function(response){var result={};for(var i in response.data.entry){var resource=response.data.entry[i].resource,type=resource.resourceType;result[type]||(result[type]={}),result[type][resource.id]=resource}return result},getFhirResourceList:function(resources){var list=[];for(var idx in resources)list.push(resources[idx].resource);return list}}}),angular.module("angularFhirResources").factory("fhirAppointment",["$http","$filter","fhirConfig","Utilities",function($http,$filter,fhirConfig,Utilities){var baseUrl=fhirConfig.url,resourceType="Appointment",defaultStatus="booked";return{getAppointments:function(status,includeList){var url=baseUrl+resourceType;return $http({method:"GET",url:url,headers:fhirConfig.headers,params:{status:status,_include:includeList}}).then(function(response){return Utilities.formatFhirResponse(response)})},createAppointment:function(appointment){appointment.resourceType=resourceType,appointment.status||(appointment.status=defaultStatus);var url=baseUrl+resourceType;return $http({method:"POST",url:url,headers:fhirConfig.headers,data:appointment})},updateAppointment:function(appointment){appointment.resourceType=resourceType;var url=baseUrl+resourceType+"/"+appointment.id;return $http({method:"PUT",url:url,headers:fhirConfig.headers,data:appointment})},instantiateEmptyAppointment:function(){return{description:{},start:{},end:{},comment:{},participant:[{}]}}}}]),angular.module("angularFhirResources").factory("fhirAuthInterceptor",["fhirConfig","$q","$location",function(fhirConfig,$q,$location){return{responseError:function(rejection){return 401==rejection.status&&(fhirConfig.clearAuthToken(),$location.path("oauth")),$q.reject(rejection)}}}]),function(){function fhirBrokeringReceiver($http,fhirConfig){function getAllReceivers(){var url=baseUrl+resourceType+"/";return $http({method:"GET",url:url,headers:fhirConfig.headers}).then(function(response){var receivers=[];return angular.forEach(response.data.entry,function(receiver){receivers.push(receiver.resource)}),receivers})}function createReceiver(receiver){var url=baseUrl+resourceType+"/";return receiver.resourceType=resourceType,$http({method:"POST",url:url,data:receiver,headers:fhirConfig.headers})}function deleteReceiver(receiver){var url=baseUrl+resourcePrefix+receiver.id;return $http({method:"DELETE",url:url,headers:fhirConfig.headers})}function editReceiver(receiver){var url=baseUrl+resourcePrefix+receiver.id;return $http({method:"PUT",url:url,data:receiver,headers:fhirConfig.headers})}function getReceiverById(receiverId){var url=baseUrl+resourcePrefix+receiverId;return $http({method:"GET",url:url,headers:fhirConfig.headers})}function toReferenceList(receiverList){return receiverList.map(function(r){return resourcePrefix+r.id})}function instantiateEmptyReceiver(){return{systemName:void 0,address:void 0,port:void 0}}var baseUrl=fhirConfig.url,resourceType="BrokeringReceiver",resourcePrefix=resourceType+"/",service={getAllReceivers:getAllReceivers,createReceiver:createReceiver,deleteReceiver:deleteReceiver,instantiateEmptyReceiver:instantiateEmptyReceiver,toReferenceList:toReferenceList,getReceiverById:getReceiverById,editReceiver:editReceiver};return service}angular.module("angularFhirResources").factory("fhirBrokeringReceiver",fhirBrokeringReceiver),fhirBrokeringReceiver.$inject=["$http","fhirConfig"]}(),angular.module("angularFhirResources").provider("fhirConfig",function(){this.apiUser=void 0,this.apiKey=void 0,this.authToken=void 0,this.url=void 0,this.oauthClientId=void 0,this.oauthRedirectUri=void 0,this.headers={"Content-Type":"application/json+fhir; charset=utf-8"},this.setAPICredentials=function(apiUser,apiKey){this.apiUser=apiUser,this.apiKey=apiKey},this.setBackendURL=function(url){this.url=url},this.setOauthClientId=function(oauthClientId){this.oauthClientId=oauthClientId},this.setOauthRedirectUri=function(oauthRedirectUri){this.oauthRedirectUri=oauthRedirectUri},this.$get=function($base64,localStorageService){var self=this;if(localStorageService.get("authToken")&&(self.authToken=localStorageService.get("authToken")),self.authToken)self.headers.Authorization="Bearer "+self.authToken;else{var authData=$base64.encode(self.apiUser+":"+self.apiKey);self.headers.Authorization="Basic "+authData}return{url:self.url,headers:self.headers,setCustomHeader:function(header,value){self.headers[header]=value},setAuthToken:function(authToken){self.authToken=authToken,self.headers.Authorization="Bearer "+authToken,localStorageService.set("authToken",self.authToken)},clearAuthToken:function(){self.authToken=void 0,localStorageService.set("authToken",void 0),self.headers.Authorization=void 0},getOauthClientId:function(){return self.oauthClientId},getOauthRedirectUri:function(){return self.oauthRedirectUri},getBackendURL:function(){return self.url},isAuthenticated:function(){return!!self.authToken}}}}),angular.module("angularFhirResources").factory("fhirDevice",["$timeout",function($timeout){var resourceType="Device",resourcePrefix=resourceType+"/",MOCK_DEVICES=[{id:"C1007-123",name:"GE Solar 8000M",type:"Monitor",profileURL:"http://www.metropolitanmed.com/images/products/lg/ge_solar8000M.jpg",manufacturer:"GE Healthcare"},{id:"681922",name:"Maquet SERVO-i",type:"Ventilator",profileURL:"http://www.ventilatorsplus.com/Servo_i.jpg",manufacturer:"Maquet"},{id:"871623",name:"Alaris",type:"Infusion Pump",profileURL:"http://www.qmed.com/sites/default/files/imagecache/node-gallery-display/105913/alaris.jpg",manufacturer:"CareFusion"},{id:"60002C41",name:"Perfusor Space",type:"Infusion Pump",profileURL:"http://cdn.dotmed.com/images/modelpics/15967.jpg",manufacturer:"B. Braun"}],defaultDevice={id:void 0,name:"Medical Device",type:"Medical Device Type",profileURL:"https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/300px-No_image_available.svg.png",manufacturer:"Medical Device Manufacturer"};return{get:function(){return $timeout(function(){return MOCK_DEVICES},500)},getDeviceById:function(deviceId){return $timeout(function(){var deviceIdInclPrefix=0===deviceId.indexOf(resourceType)?deviceId:resourcePrefix+deviceId;for(var idx in MOCK_DEVICES){var entry=MOCK_DEVICES[idx];if((resourcePrefix+entry.id).toUpperCase()===deviceIdInclPrefix.toUpperCase())return entry}var newDevice=angular.copy(defaultDevice);return newDevice.id=deviceId,newDevice},500)},createDevice:function(newDevice){return $timeout(function(){MOCK_DEVICES.push(newDevice)},200)},getDefaultDevice:function(customDeviceId){var defDevice=angular.copy(defaultDevice);return defDevice.id=customDeviceId,defDevice},getResourcePrefix:function(){return resourcePrefix},getResourceType:function(){return resourceType}}}]),angular.module("angularFhirResources").factory("fhirDeviceMetric",["$http","fhirConfig","Utilities",function($http,fhirConfig,Utilities){var baseUrl=fhirConfig.url,resourceType="DeviceMetric";return{getAllDeviceMetrics:function(){var url=baseUrl+resourceType;return $http({method:"GET",url:url,headers:fhirConfig.headers}).then(function(response){return Utilities.getFhirResourceList(response.data.entry)})},initiateEmptyDeviceMetric:function(){return{type:{text:{},coding:[{}]},color:{},category:{},extension:[{url:"http://sll-mdilab.net/fhir/Order#metricType",valueString:{}}]}}}}]),angular.module("angularFhirResources").factory("fhirDeviceUseStatement",["$http","fhirConfig",function($http,fhirConfig){function getCurrentDatetime(){return(new Date).toISOString()}function populateTemplate(obj,key,replacements){return"string"==typeof key?populateTemplate(obj,key.split("."),replacements):1!==key.length||void 0===replacements?0===key.length?obj:populateTemplate(obj[key[0]],key.slice(1),replacements):void(obj[key[0]]=sprintf(obj[key[0]],replacements))}var resourceType="DeviceUseStatement",baseUrl=fhirConfig.url+resourceType,activeDeviceUrl=baseUrl+"?end:missing=true&patient.identifier=%(pid)s&_format=json",addDeviceDataTmpl={resourceType:resourceType,device:{reference:"Device/%(deviceId)s"},subject:{reference:"Patient/%(patientId)s"},whenUsed:{start:"%(date)s"},extension:[]},practitionerDataTmpl={url:"http://sll-mdilab.net/fhir/"+resourceType+"#issuer",valueResource:{reference:"Practitioner/%(practitionerId)s"}};return{getDeviceUseStatementsByPatientId:function(patientId){var url=sprintf(activeDeviceUrl,{pid:patientId});return $http({method:"GET",url:url,headers:fhirConfig.headers}).then(function(response){var deviceUseStatements=[],data=response.data;if(data.total>0)for(var idx in data.entry){var entry=data.entry[idx];deviceUseStatements.push({deviceId:entry.resource.device.reference,startDatetime:entry.resource.whenUsed.start,id:entry.resource.id,original:entry})}return deviceUseStatements})},addDeviceToPatient:function(patientId,deviceId,practitionerId,receiverRefList){var url=baseUrl,postData=angular.copy(addDeviceDataTmpl),replacements={deviceId:deviceId,patientId:patientId,practitionerId:practitionerId,date:getCurrentDatetime()},practitionerExtension=angular.copy(practitionerDataTmpl);return populateTemplate(postData,"device.reference",replacements),populateTemplate(postData,"subject.reference",replacements),populateTemplate(postData,"whenUsed.start",replacements),populateTemplate(practitionerExtension,"valueResource.reference",replacements),postData.extension.push(practitionerExtension),receiverRefList&&receiverRefList.length>0&&this.addReceiversToDeviceUseStatement(postData,receiverRefList),$http({method:"POST",url:url,headers:fhirConfig.headers,data:postData})},updateDeviceUseStatement:function(deviceUseStatement){var url=baseUrl+"/"+deviceUseStatement.id;return $http({method:"PUT",url:url,headers:fhirConfig.headers,data:deviceUseStatement})},addReceiversToDeviceUseStatement:function(deviceUseStatement,receiverRefList){var extensionUrl="http://sll-mdilab.net/fhir/DeviceUseStatement#brokeringReceiver";deviceUseStatement.extension||(deviceUseStatement.extension=[]),deviceUseStatement.extension=deviceUseStatement.extension.filter(function(item){return item.url!==extensionUrl}),angular.forEach(receiverRefList,function(ref){deviceUseStatement.extension.push({url:extensionUrl,valueResource:{reference:ref}})})}}}]),angular.module("angularFhirResources").factory("fhirEncounter",["$http","$filter","fhirConfig","Utilities",function($http,$filter,fhirConfig,Utilities){var baseUrl=fhirConfig.url,resourceType="Encounter",activeStatuses=["in-progress"],statusOptions={planned:"Planned",arrived:"Arrived","in-progress":"In-progress",onleave:"Onleave",finished:"Finished",cancelled:"Cancelled"},defaultStatus="arrived",statusActive=function(value){return activeStatuses.indexOf(value.resource.status)>=0};return{getAllActiveEncounters:function(){var url=baseUrl+resourceType;return $http({method:"GET",url:url,headers:fhirConfig.headers}).then(function(response){var activeResources=$filter("filter")(response.data.entry,statusActive);return Utilities.getFhirResourceList(activeResources)})},getEncounters:function(episodeOfCare,status,includeList){var url=baseUrl+resourceType;return $http({method:"GET",url:url,headers:fhirConfig.headers,params:{episodeofcare:episodeOfCare,status:status,_include:includeList}}).then(function(response){return Utilities.formatFhirResponse(response)})},dischargePatientByEncounter:function(encounter){var url=baseUrl+resourceType+"/"+encounter.id;return encounter.status="finished",encounter.period||(encounter.period={}),encounter.period.end=(new Date).toISOString(),$http({method:"PUT",url:url,headers:fhirConfig.headers,data:encounter})},createEncounter:function(encounter){encounter.resourceType=resourceType,encounter.status&&encounter.status!=={}||(encounter.status=defaultStatus);var url=baseUrl+resourceType;return $http({method:"POST",url:url,headers:fhirConfig.headers,data:encounter})},updateEncounter:function(encounter){encounter.resourceType=resourceType;var url=baseUrl+resourceType+"/"+encounter.id;return $http({method:"PUT",url:url,headers:fhirConfig.headers,data:encounter})},instantiateEmptyEncounter:function(){return{identifier:[{}],patient:{},episodeOfCare:{},serviceProvider:{},careManager:{},period:{},location:[{location:{}}],type:{coding:[{}]},status:{},"class":{},priority:{coding:[{}]},reason:{coding:[{}]},participant:[{individual:{},type:{}}]}},getActiveStatuses:function(){return activeStatuses},getStatusOptions:function(){return statusOptions}}}]),angular.module("angularFhirResources").factory("fhirEpisodeOfCare",["$http","$filter","fhirConfig","Utilities",function($http,$filter,fhirConfig,Utilities){var baseUrl=fhirConfig.url,resourceType="EpisodeOfCare",defaultStatus="active";return{getEpisodesOfCare:function(teamMember,status,includeList){var url=baseUrl+resourceType;return $http({method:"GET",url:url,headers:fhirConfig.headers,params:{"team-member":teamMember,status:status,_include:includeList}}).then(function(response){return Utilities.formatFhirResponse(response)})},createEpisodeOfCare:function(episodeOfCare){episodeOfCare.resourceType=resourceType,episodeOfCare.status||(episodeOfCare.status=defaultStatus);var url=baseUrl+resourceType;return $http({method:"POST",url:url,headers:fhirConfig.headers,data:episodeOfCare}).success(function(response){return response})},updateEpisodeOfCare:function(episodeOfCare){episodeOfCare.resourceType=resourceType;var url=baseUrl+resourceType+"/"+episodeOfCare.id;return $http({method:"PUT",url:url,headers:fhirConfig.headers,data:episodeOfCare})},instantiateEmptyEpisodeOfCare:function(){return{identifier:[{}],patient:{},managingOrganization:{},careManager:{},careTeam:[{member:{}}]}}}}]),angular.module("angularFhirResources").factory("fhirList",["$http","fhirConfig","Utilities",function($http,fhirConfig,Utilities){var baseUrl=fhirConfig.url,resourceType="List",resourcePrefix=resourceType+"/";return{getList:function(params){var url=baseUrl;return params.includeResourceType&&(url+=resourcePrefix),url+=params.listId,$http({method:"GET",url:url,headers:fhirConfig.headers}).then(function(response){return response.data})},instantiateEmptyList:function(){return{status:"current",mode:"working",entry:[]}}}}]),angular.module("angularFhirResources").factory("fhirMedication",["$http","fhirConfig","Utilities",function($http,fhirConfig,Utilities){var baseUrl=fhirConfig.url,resourceType="Medication";return{getAllMedication:function(){var url=baseUrl+resourceType;return $http({method:"GET",url:url,headers:fhirConfig.headers}).then(function(response){return Utilities.getFhirResourceList(response.data.entry)})},instantiateEmptyMedication:function(){return{code:{text:{}}}}}}]),angular.module("angularFhirResources").factory("fhirMedicationOrder",["$http","fhirConfig","Utilities",function($http,fhirConfig,Utilities){var baseUrl=fhirConfig.url,resourceType="MedicationOrder",defaultStatus="draft";return{getMedicationOrdersForPatient:function(patient,includeList){var url=baseUrl+resourceType;return $http({method:"GET",url:url,headers:fhirConfig.headers,params:{patient:patient,_include:includeList}}).then(function(response){return Utilities.formatFhirResponse(response)})},createMedicationOrder:function(medicationOrder){medicationOrder.status&&medicationOrder.status!=={}||(medicationOrder.status=defaultStatus),medicationOrder.resourceType=resourceType;var url=baseUrl+resourceType;return $http({method:"POST",url:url,headers:fhirConfig.headers,data:medicationOrder})},updateMedicationOrder:function(medicationOrder){medicationOrder.resourceType=resourceType;var url=baseUrl+resourceType+"/"+medicationOrder.id;return $http({method:"PUT",url:url,headers:fhirConfig.headers,data:medicationOrder})},deleteMedicationOrder:function(medicationOrderId){var url=baseUrl+resourceType+"/"+medicationOrderId;return $http({method:"DELETE",url:url,headers:fhirConfig.headers})},instantiateEmptyMedicationOrder:function(){return{patient:{},prescriber:{},medicationReference:{},dateWritten:{},dosageInstruction:[{text:{},additionalInstructions:{}}]}}}}]),angular.module("angularFhirResources").service("fhirOauth",["fhirConfig","$timeout",function(fhirConfig,$timeout){function removeTrailingSlash(url){return url.replace(/\/$/,"")}function getDefaultPractitioner(userId){return{resourceType:"Practitioner",id:userId,identifier:[{value:userId}],name:{text:"Unregistered Practitioner"},practitionerRole:[{role:{coding:[{system:"http://snomed.info/sct",code:"158965000",display:"Medical practitioner"}]}}]}}function getIdPart(resourcePath){return resourcePath.split("/")[1]}this.authorize=function(errback){FHIR.oauth2.authorize({server:removeTrailingSlash(fhirConfig.url),client:{client_id:fhirConfig.getOauthClientId(),scope:"openid profile",redirect_uri:fhirConfig.getOauthRedirectUri()}},errback)},this.ready=function(callback,errback){FHIR.oauth2.settings.replaceBrowserHistory=!1,FHIR.oauth2.ready(function(smart){function attempt(){console.log("Fetching patient..."),smart.api.search({type:"Patient"}).done(function(){console.log("Fetching practitioner."),smart.user.read().done(function(currentPractitioner){callback(currentPractitioner)}).fail(function(){callback(getDefaultPractitioner(getIdPart(smart.userId)))})}).fail(attempt)}console.log("Ready callback."),fhirConfig.setAuthToken(smart.tokenResponse.access_token),console.log(smart.tokenResponse),console.log("Waiting..."),console.log("Waiting done."),attempt()},errback)}}]),angular.module("angularFhirResources").factory("fhirObservation",["$http","fhirConfig","Utilities","fhirWaveFormGenerator",function($http,fhirConfig,Utilities,fhirWaveFormGenerator){var resourceType="Observation",url=fhirConfig.url+resourceType;return{getObservationSummaryByPatientId:function(patientId,dateRange){return $http({method:"GET",url:url,headers:fhirConfig.headers,params:{subject:patientId,date:dateRange,_format:"json","-summary":!0}}).then(function(response){return response.data})},getObservationSummaryByDeviceId:function(deviceId,dateRange){return 0===deviceId.indexOf("Device/")&&(deviceId=deviceId.substr("Device/".length)),$http({method:"GET",url:url,headers:fhirConfig.headers,params:{"device.identifier":deviceId,date:dateRange,_format:"json","-summary":!0}}).then(function(response){return response.data})},getActiveObservationCodesByDeviceId:function(deviceId,dateRange){return this.getObservationSummaryByDeviceId(deviceId,dateRange).then(function(summary){var activeCodes=[];return angular.forEach(summary.entry,function(entry){activeCodes.push(entry.resource.code.coding[0].code)}),activeCodes})},getObservationsByPatientId:function(patientId,dateRange,code,samplingPeriod){var requestParams={subject:patientId,date:dateRange,code:code,_format:"json"};return samplingPeriod&&(requestParams["-samplingPeriod"]=samplingPeriod),$http({method:"GET",url:url,headers:fhirConfig.headers,params:requestParams}).then(function(response){return response.data})},getAnnotationObservationsByPatientId:function(patientId,dateRange,code){var requestParams={subject:patientId,date:dateRange,code:code,_format:"json","value-quantity:missing":!0,"-comments:missing":!1};return $http({method:"GET",url:url,headers:fhirConfig.headers,params:requestParams}).then(function(response){return Utilities.getFhirResourceList(response.data.entry)})},getManualObservationsByPatientId:function(patientId,dateRange,parameterCode,methodCode){var requestParams={subject:patientId,date:dateRange,code:parameterCode,_format:"json","-method":methodCode};return $http({method:"GET",url:url,headers:fhirConfig.headers,params:requestParams}).then(function(response){return Utilities.getFhirResourceList(response.data.entry)})},getObservationsByDeviceId:function(deviceId,dateRange,code,samplingPeriod){0===deviceId.indexOf("Device/")&&(deviceId=deviceId.substr("Device/".length));var requestParams={"device.identifier":deviceId,date:dateRange,code:code,_format:"json"};return samplingPeriod&&(requestParams["-samplingPeriod"]=samplingPeriod),$http({method:"GET",url:url,headers:fhirConfig.headers,params:requestParams}).then(function(response){return response.data})},createObservation:function(observation){return observation.resourceType=resourceType,$http({method:"POST",url:url,headers:fhirConfig.headers,data:observation})},generateRandomObservation:function(code,offset,deviation){var newObject=angular.copy(this.instantiateEmptyObservation());angular.isDefined(offset)||(offset=80),angular.isDefined(deviation)||(deviation=20);for(var eidx in newObject.entry){var e=newObject.entry[eidx];code&&(e.resource.code.coding[0].code=code),e.resource.valueQuantity.value=.5*deviation*Math.random()-.5*deviation*Math.random()+offset,e.resource.effectiveDateTime=(new Date).toISOString()}return newObject},generateRandomWaveFormObservation:function(code){return fhirWaveFormGenerator.nextWaveSamples()},instantiateEmptyObservation:function(){return{resourceType:"Bundle",entry:[{resource:{resourceType:"Observation",code:{coding:[{}]},valueQuantity:{},effectiveDateTime:"2015-03-26T16:32:40.000",subject:{}}}]}},instantiateEmptyAnnotationObservation:function(){return{resourceType:"Observation",code:{coding:[{}]},comments:{},effectivePeriod:{start:{},end:{}},subject:{},performer:{}}},instantiateEmptyManualObservation:function(){return{resourceType:"Observation",code:{coding:[{}]},valueQuantity:{},effectiveDateTime:{},subject:{},performer:{},method:{coding:[{system:"MDC",code:"MMEAS",display:"manual-measurement"}]}}},instantiateEmptyWaveFormObservation:function(){var obs=this.instantiateEmptyObservation();return obs.entry[0].resource.valueSampledData={},delete obs.entry[0].resource.valueQuantity,obs}}}]),angular.module("angularFhirResources").factory("fhirOrder",["$http","fhirConfig","Utilities",function($http,fhirConfig,Utilities){var baseUrl=fhirConfig.url,resourceType="Order";return{getOrdersForPatient:function(patient){var url=baseUrl+resourceType;return $http({method:"GET",url:url,headers:fhirConfig.headers,params:{patient:patient}}).then(function(response){return Utilities.getFhirResourceList(response.data.entry)})},createOrder:function(order){order.resourceType=resourceType;var url=baseUrl+resourceType;return $http({method:"POST",url:url,headers:fhirConfig.headers,data:order})},updateOrder:function(order){order.resourceType=resourceType;var url=baseUrl+resourceType+"/"+order.id;return $http({method:"PUT",url:url,headers:fhirConfig.headers,data:order})},deleteOrder:function(orderId){var url=baseUrl+resourceType+"/"+orderId;return $http({method:"DELETE",url:url,headers:fhirConfig.headers})},instantiateEmptyOrder:function(){return{date:{},subject:{reference:{}},source:{reference:{}},detail:[{reference:{}}],extension:[{url:"http://sll-mdilab.net/fhir/Order#alarmlimits",extension:[{url:"lowerAlarm",valueDecimal:{}},{url:"lowerWarning",valueDecimal:{}},{url:"upperWarning",valueDecimal:{}},{url:"upperAlarm",valueDecimal:{}}]}]}}}}]),angular.module("angularFhirResources").factory("fhirOrganization",["$http","$filter","fhirConfig","Utilities",function($http,$filter,fhirConfig,Utilities){var baseUrl=fhirConfig.url,resourceType="Organization";return{getAllOrganizations:function(params){var url=baseUrl+resourceType;return $http({method:"GET",url:url,headers:fhirConfig.headers}).then(function(response){return Utilities.getFhirResourceList(response.data.entry)})},getOrganization:function(params){var url=baseUrl;return params.includeResourceType&&(url+=resourceType+"/"),url+=params.organizationId,$http({method:"GET",url:url,headers:fhirConfig.headers}).then(function(response){return response.data})},createOrganization:function(organization){var url=baseUrl+resourceType;return organization.resourceType=resourceType,$http({method:"POST",url:url,data:organization,headers:fhirConfig.headers})},instantiateEmptyOrganization:function(){return{identifier:[{}],name:{}}}}}]),angular.module("angularFhirResources").factory("fhirPatient",["$http","fhirConfig","Utilities",function($http,fhirConfig,Utilities){var baseUrl=fhirConfig.url,resourceType="Patient";return{getAllPatients:function(){var url=baseUrl+resourceType;return $http({method:"GET",url:url,headers:fhirConfig.headers,params:{}}).then(function(response){return Utilities.formatFhirResponse(response)})},getPatient:function(params){var url=baseUrl;return params.includeResourceType&&(url+=resourceType+"/"),url+=params.patientId,$http({method:"GET",url:url,headers:fhirConfig.headers}).then(function(response){return response.data})},createPatient:function(patient){var url=baseUrl+resourceType;return patient.resourceType=resourceType,$http({method:"POST",url:url,data:patient,headers:fhirConfig.headers})},instantiateEmptyPatient:function(){return{identifier:[{}],gender:{},address:[],name:[{given:[],family:[]}],telecom:[{system:"email"},{system:"phone"}],photo:[{}]}}}}]),angular.module("angularFhirResources").factory("fhirPractitioner",["$http","fhirConfig",function($http,fhirConfig){var baseUrl=fhirConfig.url,resourceType="Practitioner",resourcePrefix=resourceType+"/";return{getPractitioner:function(params){var url=baseUrl;return params.includeResourceType&&(url+=resourcePrefix),url+=params.practitionerId,$http({method:"GET",url:url,headers:fhirConfig.headers}).then(function(response){return response.data})},getAllPractitioners:function(){var url=baseUrl+resourceType;return $http({method:"GET",url:url,headers:fhirConfig.headers}).then(function(response){var resources=response.data.entry,practitioners=[];for(var idx in resources)practitioners.push(resources[idx].resource);return practitioners})},getResourcePrefix:function(){return resourcePrefix},instantiateEmptyPractitioner:function(){return{identifier:[{}],name:{},practitionerRole:[{role:{coding:[{}]}}]}}}}]),angular.module("angularFhirResources").factory("fhirQuestionnaireResponse",["$http","fhirConfig","Utilities",function($http,fhirConfig,Utilities){var baseUrl=fhirConfig.url,resourceType="QuestionnaireResponse";return{getQuestionnaireResponsesForPatient:function(patient){var url=baseUrl+resourceType;return $http({method:"GET",url:url,headers:fhirConfig.headers,params:{patient:patient}}).then(function(response){return Utilities.formatFhirResponse(response)})},updateQuestionnaireResponse:function(questionnaireResponse){questionnaireResponse.resourceType=resourceType;var url=baseUrl+resourceType+"/"+questionnaireResponse.id;return $http({method:"PUT",url:url,headers:fhirConfig.headers,data:questionnaireResponse})}}}]),angular.module("angularFhirResources").factory("fhirReferralRequest",["$http","$filter","fhirConfig","Utilities",function($http,$filter,fhirConfig,Utilities){var baseUrl=fhirConfig.url,resourceType="ReferralRequest",defaultStatus="requested";return{getReferralRequests:function(patient,status,includeList){var url=baseUrl+resourceType;return $http({method:"GET",url:url,headers:fhirConfig.headers,params:{patient:patient,status:status,_include:includeList}}).then(function(response){return Utilities.formatFhirResponse(response)})},updateReferralRequest:function(referralRequest){var url=baseUrl+resourceType+"/"+referralRequest.id;return $http({method:"PUT",url:url,headers:fhirConfig.headers,data:referralRequest})},createReferralRequest:function(referralRequest){referralRequest.resourceType=resourceType,referralRequest.status||(referralRequest.status=defaultStatus);var url=baseUrl+resourceType;return $http({method:"POST",url:url,headers:fhirConfig.headers,data:referralRequest})},instantiateEmptyReferralRequest:function(){return{identifier:[{}],patient:{},requester:{},recipient:{},encounter:{}}},getActiveStatuses:function(){return ongoingStatuses},getStatusOptions:function(){return statusOptions}}}]),function(){function _fhirWaveFormGenerator(rfc4122){function nextWaveSamples(){return advanceIndex(),createFhirObservation(gen.sampleData)}function advanceIndex(){gen.previousIdx=gen.currentIdx,gen.currentIdx=Date.now()%gen.timeFrame}function createFhirObservation(subSamples){var obs=angular.copy(emptyWaveFormObservationObject);return obs.entry[0].resource.code.coding[0]={system:"MDC",code:gen.dataType},obs.entry[0].resource.id=rfc4122.v4(),obs.entry[0].resource.effectiveDateTime=(new Date).toISOString(),obs.entry[0].resource.valueSampledData.period=1e3/gen.rate,obs.entry[0].resource.valueSampledData.lowerLimit=gen.rangeLow,obs.entry[0].resource.valueSampledData.upperLimit=gen.rangeHigh,obs.entry[0].resource.valueSampledData.origin={value:0,units:gen.unit},obs.entry[0].resource.valueSampledData.data=subSamples.join(" "),obs}var gen={},emptyWaveFormObservationObject={resourceType:"Bundle",entry:[{resource:{resourceType:"Observation",code:{coding:[{}]},valueSampledData:{},effectiveDateTime:"2015-03-26T16:32:40.000",subject:{}}}]};return gen.sampleData=[.32,.305,.3,.295,.28500000000000003,.27,.27,.28,.275,.275,.275,.28,.28,.275,.27,.275,.275,.275,.275,.28,.275,.28,.275,.28,.28,.275,.275,.28,.28500000000000003,.28500000000000003,.275,.28,.28,.28,.275,.26,.25,.23,.21,.185,.17,.15,.145,.23,.34500000000000003,.465,.585,.665,.79,.91,1.03,1.1500000000000001,1.27,1.3900000000000001,1.475,1.445,1.3800000000000001,1.3,1.235,1.1500000000000001,1.07,.995,.91,.8250000000000001,.74,.66,.595,.58,.595,.62,.645,.67,.6900000000000001,.72,.74,.745,.74,.75,.75,.75,.74,.745,.745,.745,.735,.74,.745,.745,.735,.73,.735,.735,.725,.725,.73,.725,.72,.715,.715,.715,.71,.71,.71,.705,.71,.7000000000000001,.7000000000000001,.7000000000000001,.6900000000000001,.685,.685,.685,.685,.68,.67,.67,.67,.66,.655,.655,.65,.645,.635,.635,.635,.63,.625,.615,.62,.615,.61,.61,.61,.595,.59,.59,.585,.58,.5650000000000001,.56,.56,.56,.545,.545,.545,.545,.545,.53,.53,.535,.53,.53,.53,.53,.53,.525,.51,.51,.5,.485,.485,.47500000000000003,.47000000000000003,.455,.445,.43,.41500000000000004,.395,.375,.365,.35000000000000003,.33,.31,.31,.305,.295,.29,.29,.28500000000000003,.275,.27,.27,.275,.27,.27,.265,.28,.275,.275,.27,.275,.27,.265,.27,.275,.275,.275,.27,.28,.275,.27,.27,.27,.275,.28,.275,.275,.28,.28,.275,.275,.28,.28,.275,.275,.28500000000000003,.3,.305,.315,.33,.34,.35000000000000003,.355,.37,.375,.38,.38,.39,.405,.41000000000000003,.41000000000000003,.41000000000000003,.41500000000000004,.41000000000000003,.41000000000000003,.41000000000000003,.42,.41000000000000003,.41000000000000003,.4,.4,.395,.385,.38,.375,.365,.36,.35000000000000003,.34500000000000003,.335,.315,.305,.305,.295,.28500000000000003,.275,.28,.28,.275,.275,.28,.28,.28500000000000003,.28,.275,.28,.28,.28,.28,.28500000000000003,.28,.28500000000000003,.275,.28,.29,.28500000000000003,.28,.28500000000000003,.28500000000000003,.28500000000000003,.28500000000000003,.28,.29,.28,.275,.265,.25,.23,.21,.185,.165,.15,.16,.25,.37,.49,.605,.6900000000000001,.8150000000000001,.935,1.05,1.17,1.295,1.415,1.49,1.445,1.375,1.295,1.23,1.145,1.065,.99,.9,.81,.735,.645,.59,.585,.605,.63,.65,.675,.6950000000000001,.72,.745,.745,.745,.75,.745,.745,.745,.745,.745,.74,.74,.745,.74,.74,.735,.73,.735,.735,.725,.73,.73,.73,.72,.715,.715,.715,.715,.71,.715,.715,.71,.6950000000000001,.7000000000000001,.7000000000000001,.6950000000000001,.685,.685,.685,.685,.675,.675,.67,.665,.65,.655,.655,.65,.645,.635,.635,.635,.625,.625,.625,.62,.615,.605,.605,.6,.59,.585,.585,.58,.5750000000000001,.5650000000000001,.56,.56,.56,.55,.545,.55,.545,.545,.535,.535,.535,.53,.53,.53,.525,.525,.52,.51,.505,.495,.485,.48,.47500000000000003,.465,.45,.435,.425,.41000000000000003,.385,.37,.36,.34500000000000003,.33,.31,.31,.305,.3,.29,.29,.28,.275,.27,.27,.27,.265,.265,.27,.27,.27,.27,.265,.275,.27,.27,.265,.275,.275,.27,.265,.265,.275,.27,.265,.27,.27,.27,.265,.265,.275,.27,.27,.27,.28,.28,.27,.275,.295,.3,.31,.32,.33,.34,.34500000000000003,.35000000000000003,.36,.37,.37,.38,.39,.395,.405,.41000000000000003,.41500000000000004,.41500000000000004,.41000000000000003,.41000000000000003,.41000000000000003,.41500000000000004,.41500000000000004,.405,.4,.4,.395,.385,.38,.375,.37,.36,.34500000000000003,.34,.33,.315,.305,.3,.295,.28500000000000003,.275,.275,.28,.275,.275,.28,.28500000000000003],
gen.rangeHigh=1.5,gen.rangeLow=-.5,gen.rate=171,gen.dataType="MDC_ECG_LEAD_I",gen.unit="MDC_DIM_MILLI_VOLT",gen.currentIdx=0,gen.previousIdx=0,gen.timeFrame=3e3,{nextWaveSamples:nextWaveSamples}}angular.module("angularFhirResources").factory("fhirWaveFormGenerator",_fhirWaveFormGenerator),_fhirWaveFormGenerator.$inject=["rfc4122"]}();